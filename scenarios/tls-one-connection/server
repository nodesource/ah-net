#!/usr/bin/env node

const tls = require('tls')

const save = require('../../test/util/save')
const tick = require('../../test/util/tick')
const PORT = process.argv[2] || 3333

const BUFFERLENGTH = 18
const STRINGLENGTH = 55
const NetworkActivityCollector = require('../../')
const collector = new NetworkActivityCollector({
    start            : process.hrtime()
  , captureArguments : true
  , captureSource    : false
  , bufferLength     : BUFFERLENGTH
  , stringLength     : STRINGLENGTH
}).enable()

const ciphers = 'AECDH-NULL-SHA'
const server = tls.createServer({ ciphers })

server
  .on('connection', onconnection)
  .on('error', onerror)
  .on('listening', onlistening)
  .listen(PORT, '::1')

function onconnection(socket) {
  socket.write('Hello')
  socket
    .on('finish', onsocketEnd)
    .end()

  function onsocketEnd() {
    server.close(onclosed)
  }
}

function onerror(err) {
  console.error(err)
}

function onlistening() { }

function onclosed() {
  tick(2, () => {
    collector
      .disable()
      .cleanAllResources()
      .processStacks()

    save('one-connection.tls.server', Array.from(collector.networkActivities), { json: true })
    save('one-connection.tls.server.all', Array.from(collector.activities), { json: true })
  })
}
